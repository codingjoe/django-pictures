name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        lint-command:
          - bandit -r . -x ./tests
          - black --check --diff .
          - flake8 .
          - isort --check-only --diff .
          - pydocstyle .
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          cache: 'pip'
          cache-dependency-path: 'linter-requirements.txt'
      - run: python -m pip install -r linter-requirements.txt
      - run: ${{ matrix.lint-command }}

  dist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - run: sudo apt install gettext -y
      - run: python -m pip install --upgrade pip build wheel twine
      - run: make gettext
      - run: python -m build --sdist --wheel
      - run: python -m twine check dist/*
      - uses: actions/upload-artifact@v4
        with:
          path: dist/*

  pytest-os:
    name: PyTest
    needs:
      - lint
    strategy:
      matrix:
        os:
          - "ubuntu-latest"
          - "macos-latest"
          - "windows-latest"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - run: python -m pip install .[test]
      - run: python -m pytest
      - uses: codecov/codecov-action@v3
        with:
          flags: ${{ matrix.os }}

  pytest-python:
    name: PyTest
    needs:
      - lint
    strategy:
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.12"
        django-version:
          - "3.2"  # LTS
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - run: python -m pip install .[test]
      - run: python -m pip install django~=${{ matrix.django-version }}.0
      - run: python -m pytest
      - uses: codecov/codecov-action@v3
        with:
          flags: py${{ matrix.python-version }}

  pytest-django:
    name: PyTest
    needs:
      - lint
    strategy:
      matrix:
        python-version:
          - "3.11"
        django-version:
          # LTS gets tested on all OS
          - "4.1"
          - "4.2"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - run: python -m pip install .[test]
      - run: python -m pip install django~=${{ matrix.django-version }}.0
      - run: python -m pytest
      - uses: codecov/codecov-action@v3
        with:
          flags: dj${{ matrix.django-version }}

  pytest-extras:
    name: PyTest
    needs:
      - lint
    strategy:
      matrix:
        extras:
          - "celery"
          - "dramatiq"
          - "drf"
          - "cleanup"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Install redis
        if: matrix.extras == 'dramatiq'
        run: sudo apt-get install -y redis-server
      - run: python -m pip install .[test,${{ matrix.extras }}]
      - run: python -m pytest
      - uses: codecov/codecov-action@v3
        with:
          flags: ${{ matrix.extras }}

  codeql:
    name: CodeQL
    needs: [ dist, pytest-os, pytest-python, pytest-django, pytest-extras ]
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ python ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: +security-and-quality
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"
